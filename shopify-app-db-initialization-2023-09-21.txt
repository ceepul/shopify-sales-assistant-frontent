CREATE TABLE subscription_plans (
    plan_id INT PRIMARY KEY,
    plan_name VARCHAR(255) NOT NULL UNIQUE,
    features TEXT[],  -- Array of features
    monthly_price DECIMAL(10, 2) NOT NULL,
    trial_duration INT NOT NULL,
    usage_price DECIMAL(10, 2),
    messages_per_month INT NOT NULL,
    faqs_allowed INT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO subscription_plans (plan_id, plan_name, features, monthly_price, trial_duration, usage_price, messages_per_month, faqs_allowed)
VALUES (0, 'Free Trial', ARRAY['300 messages', 'Seamless integration', 'UI customization', '25 frequently asked questions'], 0.00, 7, NULL, 300, 25);

INSERT INTO subscription_plans (plan_id, plan_name, features, monthly_price, trial_duration, usage_price, messages_per_month, faqs_allowed)
VALUES (1, 'Basic', ARRAY['2000 messages per month', 'Seamless integration', 'UI customization', '25 frequently asked questions'], 49.00, 7, NULL, 2000, 25);

INSERT INTO subscription_plans (plan_id, plan_name, features, monthly_price, trial_duration, usage_price, messages_per_month, faqs_allowed)
VALUES (2, 'Entreprenuer', ARRAY['5000 messages per month', 'Seamless integration', 'UI customization', '100 frequently asked questions'], 89.00, 7, NULL, 5000, 100);

INSERT INTO subscription_plans (plan_id, plan_name, features, monthly_price, trial_duration, usage_price, messages_per_month, faqs_allowed)
VALUES (3, 'Scale', ARRAY['15000 messages per month', 'Seamless integration', 'UI customization', '300 frequently asked questions'], 219.00, 7, NULL, 15000, 300);

INSERT INTO subscription_plans (plan_id, plan_name, features, monthly_price, trial_duration, usage_price, messages_per_month, faqs_allowed)
VALUES (4, 'Enterprise', ARRAY['40000 messages per month', 'Seamless integration', 'UI customization', '1000 frequently asked questions'], 449.00, 0, 0.01, 40000, 1000);

CREATE TABLE shops (
    id SERIAL PRIMARY KEY,
    shop VARCHAR(255) NOT NULL UNIQUE,
    contact_email VARCHAR(255),
    shop_name VARCHAR(255),
    first_time_user BOOLEAN,
    first_install_date DATE,
    plan_id INTEGER, 
    graphql_plan_id VARCHAR(255),
    subscription_start_date DATE DEFAULT CURRENT_DATE,
    subscription_end_date DATE DEFAULT (CURRENT_DATE + INTERVAL '7 days'),
    subscription_status VARCHAR(50),
    subscription_updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    messages_this_billing_period INTEGER,
    pinecone_db_index VARCHAR(255),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (plan_id) REFERENCES subscription_plans(plan_id)
);

CREATE TABLE shop_preferences (
    id SERIAL PRIMARY KEY,
    shop VARCHAR(255) NOT NULL UNIQUE,
    assistant_name VARCHAR(255),
    accent_colour VARCHAR(7),
    avatar_image_src VARCHAR(511), 
    store_info TEXT,
    dark_mode BOOLEAN DEFAULT FALSE,
    welcome_message TEXT,
    home_screen BOOLEAN DEFAULT FALSE,
    over_limit BOOLEAN DEFAULT FALSE,
    hide_logo BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shop) REFERENCES shops(shop) ON DELETE CASCADE
);

CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    product_id VARCHAR(255) NOT NULL UNIQUE,
    product_handle VARCHAR(511) NOT NULL,
    shop VARCHAR(255) NOT NULL,
    active BOOLEAN,
    title VARCHAR(511),
    description TEXT,
    image_src VARCHAR(511),
    image_alt TEXT,
    price DECIMAL(10,2),
    options TEXT,
    total_recommendations INTEGER,
    total_product_views INTEGER,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shop) REFERENCES shops(shop) ON DELETE CASCADE
);

CREATE TABLE messages (
    id SERIAL PRIMARY KEY,
    shop VARCHAR(255) NOT NULL,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shop) REFERENCES shops(shop) ON DELETE CASCADE
);

CREATE TABLE recommendation_events (
    id SERIAL PRIMARY KEY,
    shop VARCHAR(255) NOT NULL,
    product_id VARCHAR(255) NOT NULL,
    recommended_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shop) REFERENCES shops(shop) ON DELETE CASCADE
);

CREATE TABLE product_view_events (
    id SERIAL PRIMARY KEY,
    shop VARCHAR(255) NOT NULL,
    product_id VARCHAR(255) NOT NULL,
    viewed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shop) REFERENCES shops(shop) ON DELETE CASCADE
);

CREATE TABLE bills (
    id SERIAL PRIMARY KEY,
    shop VARCHAR(255) NOT NULL,
    bill_date DATE NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    number_of_messages INTEGER NOT NULL,
    is_paid BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE subscription_history (
    id SERIAL PRIMARY KEY,
    shop VARCHAR(255) NOT NULL, 
    plan_name VARCHAR(255),
    graphql_plan_id VARCHAR(255),
    status VARCHAR(50),
    subscription_end_date DATE,
    resetMessages BOOLEAN,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    posted_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE shipping_policies (
    id SERIAL PRIMARY KEY,
    pinecone_id VARCHAR(511) NOT NULL UNIQUE,
    shop VARCHAR(255) NOT NULL,
    policy_text TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shop) REFERENCES shops(shop) ON DELETE CASCADE
);

CREATE TABLE return_policies (
    id SERIAL PRIMARY KEY,
    pinecone_id VARCHAR(511) NOT NULL UNIQUE,
    shop VARCHAR(255) NOT NULL,
    policy_text TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shop) REFERENCES shops(shop) ON DELETE CASCADE
);

CREATE TABLE faqs (
    id UUID PRIMARY KEY,
    shop VARCHAR(255) NOT NULL,
    question TEXT NOT NULL,
    answer TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shop) REFERENCES shops(shop) ON DELETE CASCADE
);